name: Nightly Build
on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: bulletty-linux-x86_64
            archive_format: tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: bulletty-linux-aarch64
            archive_format: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: bulletty-windows-x86_64
            archive_format: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: bulletty-macos-x86_64
            archive_format: tar.gz
          - os: macos-14
            target: aarch64-apple-darwin
            artifact_name: bulletty-macos-aarch64
            archive_format: tar.gz
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Install cross (for arm64 builds)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cargo install cross

      - name: Build
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Archive binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.artifact_name }}-${{ github.sha }}.zip bulletty.exe

      - name: Archive binaries (Unix)
        if: matrix.os != 'windows-latest'
        run: tar -czvf ${{ matrix.artifact_name }}-${{ github.sha }}.tar.gz -C target/${{ matrix.target }}/release bulletty 

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-${{ github.sha }}
          path: ${{ matrix.artifact_name }}-${{ github.sha }}.*

  release:
    name: Create Nightly Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create Nightly Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build ${{ github.run_number }}
          prerelease: true
          draft: false
          files: |
            ./artifacts/*
